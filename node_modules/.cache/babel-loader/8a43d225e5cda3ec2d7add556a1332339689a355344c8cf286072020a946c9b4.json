{"ast":null,"code":"var _jsxFileName = \"C:\\\\Git\\\\databaseVersion\\\\src\\\\main\\\\frontend\\\\src\\\\Release2022.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport DataTable from './DataTable';\nimport { DataGrid } from '@mui/x-data-grid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  field: 'knowledge_id',\n  headerName: 'knowledge_id',\n  width: 150\n}, {\n  field: 'product_version_id',\n  headerName: 'product_version_id',\n  width: 150\n}, {\n  field: 'knowledge_number',\n  headerName: 'knowledge_number',\n  width: 150\n}, {\n  field: 'build_number',\n  headerName: 'build_number',\n  width: 150\n}, {\n  field: 'file_version',\n  headerName: 'file_version',\n  width: 150\n}, {\n  field: 'release_date',\n  headerName: 'release_date',\n  width: 150\n}, {\n  field: 'kb_url',\n  headerName: 'kb_url',\n  width: 200\n}, {\n  field: 'kb_detail',\n  headerName: 'kb_detail',\n  width: 150\n}];\nconst userTableStyles = {\n  height: '800px',\n  width: '600px'\n};\nconst Release2022 = _ref => {\n  _s();\n  let {\n    onError\n  } = _ref;\n  const [user, setUser] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:8082/release2022').then(response => response.json()).then(json => setUser(json)).catch(() => onError());\n  }, []);\n  /*#__PURE__*/_jsxDEV(DataGrid, {\n    getRowId: row => row.users\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 1\n  }, this);\n  return /*#__PURE__*/_jsxDEV(DataTable, {\n    rows: user,\n    columns: columns,\n    loading: !user.length,\n    sx: userTableStyles\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n_s(Release2022, \"g26Pb/ecDi+x6k07CsgfguRqPQQ=\");\n_c = Release2022;\nexport default Release2022;\nvar _c;\n$RefreshReg$(_c, \"Release2022\");","map":{"version":3,"names":["React","useEffect","useState","DataTable","DataGrid","columns","field","headerName","width","userTableStyles","height","Release2022","onError","user","setUser","fetch","then","response","json","catch","row","users","length"],"sources":["C:/Git/databaseVersion/src/main/frontend/src/Release2022.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport DataTable from './DataTable';\r\nimport { DataGrid } from '@mui/x-data-grid';\r\n\r\nconst columns = [\r\n    { field: 'knowledge_id', headerName: 'knowledge_id', width: 150 },\r\n    { field: 'product_version_id', headerName: 'product_version_id', width: 150 },\r\n    { field: 'knowledge_number', headerName: 'knowledge_number', width: 150 },\r\n    { field: 'build_number', headerName: 'build_number', width: 150 },\r\n    { field: 'file_version', headerName: 'file_version', width: 150 },\r\n    { field: 'release_date', headerName: 'release_date', width: 150 },\r\n    { field: 'kb_url', headerName: 'kb_url', width: 200 },\r\n    { field: 'kb_detail', headerName: 'kb_detail', width: 150 },\r\n];\r\n\r\nconst userTableStyles = {\r\n    height: '800px',\r\n    width : '600px'\r\n};\r\n\r\nconst Release2022 = ({ onError }) => {\r\n    const [user, setUser] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetch('http://localhost:8082/release2022')\r\n            .then((response) => response.json())\r\n            .then((json) => setUser(json))\r\n            .catch(() => onError())\r\n    }, []);\r\n\r\n<DataGrid getRowId={(row) => row.users} />\r\n\r\n    return (\r\n        <DataTable\r\n            rows={user}\r\n            columns={columns}\r\n            loading={!user.length}\r\n            sx={userTableStyles}\r\n            \r\n            \r\n        />\r\n    );\r\n};\r\n\r\nexport default Release2022;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,SAAS,MAAM,aAAa;AACnC,SAASC,QAAQ,QAAQ,kBAAkB;AAAC;AAE5C,MAAMC,OAAO,GAAG,CACZ;EAAEC,KAAK,EAAE,cAAc;EAAEC,UAAU,EAAE,cAAc;EAAEC,KAAK,EAAE;AAAI,CAAC,EACjE;EAAEF,KAAK,EAAE,oBAAoB;EAAEC,UAAU,EAAE,oBAAoB;EAAEC,KAAK,EAAE;AAAI,CAAC,EAC7E;EAAEF,KAAK,EAAE,kBAAkB;EAAEC,UAAU,EAAE,kBAAkB;EAAEC,KAAK,EAAE;AAAI,CAAC,EACzE;EAAEF,KAAK,EAAE,cAAc;EAAEC,UAAU,EAAE,cAAc;EAAEC,KAAK,EAAE;AAAI,CAAC,EACjE;EAAEF,KAAK,EAAE,cAAc;EAAEC,UAAU,EAAE,cAAc;EAAEC,KAAK,EAAE;AAAI,CAAC,EACjE;EAAEF,KAAK,EAAE,cAAc;EAAEC,UAAU,EAAE,cAAc;EAAEC,KAAK,EAAE;AAAI,CAAC,EACjE;EAAEF,KAAK,EAAE,QAAQ;EAAEC,UAAU,EAAE,QAAQ;EAAEC,KAAK,EAAE;AAAI,CAAC,EACrD;EAAEF,KAAK,EAAE,WAAW;EAAEC,UAAU,EAAE,WAAW;EAAEC,KAAK,EAAE;AAAI,CAAC,CAC9D;AAED,MAAMC,eAAe,GAAG;EACpBC,MAAM,EAAE,OAAO;EACfF,KAAK,EAAG;AACZ,CAAC;AAED,MAAMG,WAAW,GAAG,QAAiB;EAAA;EAAA,IAAhB;IAAEC;EAAQ,CAAC;EAC5B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAEpCD,SAAS,CAAC,MAAM;IACZc,KAAK,CAAC,mCAAmC,CAAC,CACrCC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACnCF,IAAI,CAAEE,IAAI,IAAKJ,OAAO,CAACI,IAAI,CAAC,CAAC,CAC7BC,KAAK,CAAC,MAAMP,OAAO,EAAE,CAAC;EAC/B,CAAC,EAAE,EAAE,CAAC;EAEV,qBAAC,QAAQ;IAAC,QAAQ,EAAGQ,GAAG,IAAKA,GAAG,CAACC;EAAM;IAAA;IAAA;IAAA;EAAA,QAAG;EAEtC,oBACI,QAAC,SAAS;IACN,IAAI,EAAER,IAAK;IACX,OAAO,EAAER,OAAQ;IACjB,OAAO,EAAE,CAACQ,IAAI,CAACS,MAAO;IACtB,EAAE,EAAEb;EAAgB;IAAA;IAAA;IAAA;EAAA,QAGtB;AAEV,CAAC;AAAC,GAtBIE,WAAW;AAAA,KAAXA,WAAW;AAwBjB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}