{"ast":null,"code":"var _jsxFileName = \"C:\\\\Git\\\\databaseVersion\\\\src\\\\main\\\\frontend\\\\src\\\\Sql2022.jsx\",\n  _s2 = $RefreshSig$();\nimport * as React from 'react';\nimport Paper from '@mui/material/Paper';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TablePagination from '@mui/material/TablePagination';\nimport TableRow from '@mui/material/TableRow';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Sql2022 = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const [release, setRelease] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:8081/release2022').then(response => response.json()).then(data => {\n      console.log(data);\n      setRelease(data);\n    }).catch(err => {\n      console.log(err.message);\n    });\n  }, []);\n  const columns = [{\n    id: 'knowledge_id',\n    label: 'Knowlwdge Id',\n    minWidth: 170\n  }, {\n    id: 'code',\n    label: 'ISO\\u00a0Code',\n    minWidth: 100\n  }, {\n    id: 'product_version_id',\n    label: 'Product Version Id',\n    minWidth: 170,\n    align: 'right',\n    format: value => value.toLocaleString('en-US')\n  }, {\n    id: 'knowledge_number',\n    label: 'Knowledge Number\\u00a0(km\\u00b2)',\n    minWidth: 170,\n    align: 'right',\n    format: value => value.toLocaleString('en-US')\n  }, {\n    id: 'build_number',\n    label: 'Build Number',\n    minWidth: 170,\n    align: 'right',\n    format: value => value.toFixed(2)\n  }, {\n    id: 'file_version',\n    label: 'File Vversion',\n    minWidth: 170,\n    align: 'right',\n    format: value => value.toFixed(2)\n  }, {\n    id: 'release_date',\n    label: 'Release Date ',\n    minWidth: 170,\n    align: 'right',\n    format: value => value.toFixed(2)\n  }, {\n    id: 'kb_url',\n    label: 'Kb Url',\n    minWidth: 170,\n    align: 'right',\n    format: value => value.toFixed(2)\n  }, {\n    id: 'kb_detail',\n    label: 'Kb Detail',\n    minWidth: 170,\n    align: 'right',\n    format: value => value.toFixed(2)\n  }];\n\n  //function createData(knowledge_id, product_version_id, knowledge_number, build_number , file_version ,release_date ,kb_url ,kb_detail) {\n\n  //return {knowledge_id, product_version_id, knowledge_number, build_number , file_version ,release_date ,kb_url ,kb_detail};}\n\n  //const rows = [createData('release'),];\n\n  function StickyHeadTable() {\n    _s();\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  }\n  _s(StickyHeadTable, \"65nbIEELuFY2eeUXbED/8VsHrEQ=\");\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    sx: {\n      width: '100%',\n      overflow: 'hidden'\n    },\n    children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n      sx: {\n        maxHeight: 440\n      },\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        stickyHeader: true,\n        \"aria-label\": \"sticky table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: release.map(column => /*#__PURE__*/_jsxDEV(TableCell, {\n              align: column.align,\n              style: {\n                minWidth: column.minWidth\n              },\n              children: column.label\n            }, column.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => {\n            return /*#__PURE__*/_jsxDEV(TableRow, {\n              hover: true,\n              role: \"checkbox\",\n              tabIndex: -1,\n              children: release.map(column => {\n                const value = row[column.id];\n                return /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: column.align,\n                  children: column.format && typeof value === 'number' ? column.format(value) : value\n                }, column.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 25\n                }, this);\n              })\n            }, row.code, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n      rowsPerPageOptions: [10, 25, 100],\n      component: \"div\",\n      count: rows.length,\n      rowsPerPage: rowsPerPage,\n      page: page,\n      onPageChange: handleChangePage,\n      onRowsPerPageChange: handleChangeRowsPerPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n};\n_s2(Sql2022, \"r6DpTGspER5j5bhEiaROwZFla+k=\");\n_c = Sql2022;\nexport default Sql2022;\nvar _c;\n$RefreshReg$(_c, \"Sql2022\");","map":{"version":3,"names":["React","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","Sql2022","release","setRelease","useState","useEffect","fetch","then","response","json","data","console","log","catch","err","message","columns","id","label","minWidth","align","format","value","toLocaleString","toFixed","StickyHeadTable","page","setPage","rowsPerPage","setRowsPerPage","handleChangePage","event","newPage","handleChangeRowsPerPage","target","width","overflow","maxHeight","map","column","rows","slice","row","code","length"],"sources":["C:/Git/databaseVersion/src/main/frontend/src/Sql2022.jsx"],"sourcesContent":["import * as React from 'react';\r\nimport Paper from '@mui/material/Paper';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport TableRow from '@mui/material/TableRow';\r\n\r\nconst Sql2022 = () => {\r\n\tconst [release, setRelease] = useState([]);\r\n\tuseEffect(() => {\r\n\t\tfetch('http://localhost:8081/release2022')\r\n\t\t\t.then((response) => response.json())\r\n\t\t\t.then((data) => {\r\n\t\t\t\tconsole.log(data);\r\n\t\t\t\tsetRelease(data);\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err.message);\r\n\t\t\t});\r\n\t}, []);\r\n\r\nconst columns = [\r\n  { id: 'knowledge_id', label: 'Knowlwdge Id', minWidth: 170 },\r\n  { id: 'code', label: 'ISO\\u00a0Code', minWidth: 100 },\r\n  {\r\n    id: 'product_version_id',\r\n    label: 'Product Version Id',\r\n    minWidth: 170,\r\n    align: 'right',\r\n    format: (value) => value.toLocaleString('en-US'),\r\n  },\r\n  {\r\n    id: 'knowledge_number',\r\n    label: 'Knowledge Number\\u00a0(km\\u00b2)',\r\n    minWidth: 170,\r\n    align: 'right',\r\n    format: (value) => value.toLocaleString('en-US'),\r\n  },\r\n  {\r\n    id: 'build_number',\r\n    label: 'Build Number',\r\n    minWidth: 170,\r\n    align: 'right',\r\n    format: (value) => value.toFixed(2),\r\n  },\r\n  \r\n  {\r\n    id: 'file_version',\r\n    label: 'File Vversion',\r\n    minWidth: 170,\r\n    align: 'right',\r\n    format: (value) => value.toFixed(2),\r\n  },\r\n  \r\n  {\r\n    id: 'release_date',\r\n    label: 'Release Date ',\r\n    minWidth: 170,\r\n    align: 'right',\r\n    format: (value) => value.toFixed(2),\r\n  },\r\n  \r\n  {\r\n    id: 'kb_url',\r\n    label: 'Kb Url',\r\n    minWidth: 170,\r\n    align: 'right',\r\n    format: (value) => value.toFixed(2),\r\n  },\r\n  \r\n  {\r\n    id: 'kb_detail',\r\n    label: 'Kb Detail',\r\n    minWidth: 170,\r\n    align: 'right',\r\n    format: (value) => value.toFixed(2),\r\n  },\r\n];\r\n\r\n//function createData(knowledge_id, product_version_id, knowledge_number, build_number , file_version ,release_date ,kb_url ,kb_detail) {\r\n \r\n  //return {knowledge_id, product_version_id, knowledge_number, build_number , file_version ,release_date ,kb_url ,kb_detail};}\r\n\r\n//const rows = [createData('release'),];\r\n\r\nfunction StickyHeadTable (){\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n}\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <Paper sx={{ width: '100%', overflow: 'hidden' }}>\r\n      <TableContainer sx={{ maxHeight: 440 }}>\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {release.map((column) => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows\r\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n              .map((row) => {\r\n                return (\r\n                  <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\r\n                    {release.map((column) => {\r\n                      const value = row[column.id];\r\n                      return (\r\n                        <TableCell key={column.id} align={column.align}>\r\n                          {column.format && typeof value === 'number'\r\n                            ? column.format(value)\r\n                            : value}\r\n                        </TableCell>\r\n                      );\r\n                    })}\r\n                  </TableRow>\r\n                );\r\n              })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        rowsPerPageOptions={[10, 25, 100]}\r\n        component=\"div\"\r\n        count={rows.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onPageChange={handleChangePage}\r\n        onRowsPerPageChange={handleChangeRowsPerPage}\r\n      />\r\n    </Paper>\r\n  );\r\n  \r\n}\r\n\r\nexport default Sql2022;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}